package telas;

import entidade.Cliente;
import entidade.ClienteDao;
import estoque.MovimentacaoEstoqueDao;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import produto.ProdutoAcabado;
import produto.ProdutoAcabadoDao;
import produto.ProdutoCongelado;
import venda.Venda;
import venda.ItemVenda;
import venda.ItemVendaDao;
import venda.VendaDao;

/**
 *
 * @author LUKAS
 */
public class telaVenda extends javax.swing.JFrame {

    public static Venda venda = new Venda();

    MovimentacaoEstoqueDao movimentacaoEstoqueDao = new MovimentacaoEstoqueDao();
    ProdutoCongelado produtoCongelado = new ProdutoCongelado();
    ProdutoAcabado produtoAcabado = new ProdutoAcabado();
    VendaDao vendaDao = new VendaDao();
    ItemVendaDao itemVendaDao = new ItemVendaDao();
    ProdutoAcabadoDao acabadoDao = new ProdutoAcabadoDao();
    ClienteDao clienteDao = new ClienteDao();
    Cliente cliente = new Cliente();
    LocalDate data = LocalDate.now();
    DateTimeFormatter fmt = DateTimeFormatter.ofPattern("dd/MM/yyyy");

    private void preencherTabela() {
        ItemVenda itemVenda = new ItemVenda();
        boolean status = itemVendaDao.conectar();
        if (status == false) {

        } else {

            int idVenda = Integer.parseInt(txtId.getText());

//            if(idVenda == null){
//                
//            }
            List<ItemVenda> listItemVenda = itemVendaDao.getItemVenda(idVenda);
            DefaultTableModel tabelaItemVenda = (DefaultTableModel) tblItemVenda.getModel();
            tblItemVenda.setRowSorter(new TableRowSorter(tabelaItemVenda));

            if (!listItemVenda.isEmpty()) {

                for (ItemVenda c : listItemVenda) {
                    Object[] obj = new Object[]{
                        c.getProdutoAcabado().getId(), c.getProdutoAcabado().getNome(),
                        c.getQuantidade(), c.getProdutoAcabado().getPreco(), c.getValorTotal()
                    };
                    boolean isDuplicate = false;
                    for (int i = 0; i < tabelaItemVenda.getRowCount(); i++) {
                        String nome = tabelaItemVenda.getValueAt(i, 1).toString();
                        String strQuantidade = tabelaItemVenda.getValueAt(i, 2).toString();
                        double quantidade = Double.parseDouble(strQuantidade);
                        if (nome.equals(c.getProdutoAcabado().getNome()) && quantidade == c.getQuantidade()) {
                            isDuplicate = true;
                            break;
                        }
                    }

                    if (!isDuplicate) {
                        tabelaItemVenda.addRow(obj);
                    }
                    itemVendaDao.desconectar();
                }
            } else {

            }
        }
    }

    /**
     * Creates new form TransferenciaEstoque
     */
    public telaVenda() {
        initComponents();
        btnAdicionar.setEnabled(false);
        btnRemover.setEnabled(false);
        btnFecharVenda.setEnabled(false);
        jbExcluir.setEnabled(false);
        txtNomeCliente.setEditable(false);
        txtNomeProduto.setEnabled(false);
        txtValorTotal.setEnabled(false);
        txtValorTotal.setEditable(false);
        txtValorUnitario.setEnabled(false);
        txtValorUnitario.setEditable(false);
        txtValorTotalFinal.setEnabled(false);
        txtData.setEditable(false);
        txtIdProduto.setEnabled(false);
        txtQuantidade.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jbBuscar = new javax.swing.JButton();
        jbIncluir = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlID3 = new javax.swing.JLabel();
        txtNomeProduto = new javax.swing.JTextField();
        jlProduto2 = new javax.swing.JLabel();
        txtIdProduto = new javax.swing.JTextField();
        txtValorUnitario = new javax.swing.JTextField();
        jlQuantidade2 = new javax.swing.JLabel();
        txtValorTotal = new javax.swing.JTextField();
        jlQuantidade3 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        jlQuantidade1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        txtData = new javax.swing.JTextField();
        jlID1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jlID = new javax.swing.JLabel();
        jlProduto3 = new javax.swing.JLabel();
        jlID4 = new javax.swing.JLabel();
        txtIdCliente = new javax.swing.JTextField();
        txtNomeCliente = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItemVenda = new javax.swing.JTable();
        btnAdicionar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnFecharVenda = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtValorTotalFinal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(1100, 100));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("VENDA");

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("VOLTAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 692, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(60, 60, 60))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setPreferredSize(new java.awt.Dimension(150, 800));

        jbBuscar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbIncluir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbIncluir.setText("Incluir");
        jbIncluir.setNextFocusableComponent(txtIdCliente);
        jbIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbIncluirActionPerformed(evt);
            }
        });

        jbSalvar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setNextFocusableComponent(txtIdProduto);
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbBuscar)
                    .addComponent(jbIncluir)
                    .addComponent(jbSalvar)
                    .addComponent(jbExcluir))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jbBuscar)
                .addGap(50, 50, 50)
                .addComponent(jbIncluir)
                .addGap(50, 50, 50)
                .addComponent(jbSalvar)
                .addGap(50, 50, 50)
                .addComponent(jbExcluir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setPreferredSize(new java.awt.Dimension(945, 800));

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlID3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlID3.setText("Cod.");

        txtNomeProduto.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtNomeProduto.setFocusable(false);

        jlProduto2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlProduto2.setText("Produto");

        txtIdProduto.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtIdProduto.setNextFocusableComponent(txtQuantidade);
        txtIdProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdProdutoFocusLost(evt);
            }
        });

        txtValorUnitario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jlQuantidade2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlQuantidade2.setText("Valor unitário");

        txtValorTotal.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jlQuantidade3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlQuantidade3.setText("Valor total");

        txtQuantidade.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtQuantidade.setNextFocusableComponent(btnAdicionar);
        txtQuantidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQuantidadeFocusLost(evt);
            }
        });

        jlQuantidade1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlQuantidade1.setText("Quantidade");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlID3)
                    .addComponent(txtIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlProduto2)
                    .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlQuantidade2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtValorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlQuantidade1)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlQuantidade3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jlQuantidade1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jlQuantidade3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jlQuantidade2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jlProduto2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jlID3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtData.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jlID1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlID1.setText("Data");

        txtId.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jlID.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlID.setText("ID");

        jlProduto3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlProduto3.setText("Cliente");

        jlID4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlID4.setText("Cod.");

        txtIdCliente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtIdCliente.setNextFocusableComponent(txtNomeCliente);
        txtIdCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdClienteFocusLost(evt);
            }
        });

        txtNomeCliente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtNomeCliente.setFocusable(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlID)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 495, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlID1)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlID4)
                    .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlProduto3)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jlID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jlID1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlID4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jlProduto3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        tblItemVenda.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblItemVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Produto", "Quantidade", "Valor unitário", "Valor total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblItemVenda);

        btnAdicionar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAdicionar.setText("Adicionar");
        btnAdicionar.setNextFocusableComponent(txtIdProduto);
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnRemover.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        btnFecharVenda.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnFecharVenda.setText("Fechar Venda");
        btnFecharVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharVendaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel2.setText("Total R$:");

        txtValorTotalFinal.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnAdicionar)
                        .addGap(36, 36, 36)
                        .addComponent(btnRemover)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(btnFecharVenda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValorTotalFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionar)
                    .addComponent(btnRemover))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtValorTotalFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(btnFecharVenda))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        Principal principal = new Principal();
        principal.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jbIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbIncluirActionPerformed
        boolean status = vendaDao.conectar();

        if (status == true) {
            String strID = Integer.toString(vendaDao.ProximoId() + 1);
            txtId.setText(strID);
            txtId.setEditable(false);
            String strData = data.format(fmt);
            txtData.setText(strData);
            txtIdProduto.setText("");
            txtNomeProduto.setText("");
            txtQuantidade.setText("");
            txtIdCliente.setText("");
            txtNomeCliente.setText("");
            txtValorUnitario.setText("");
            txtValorTotal.setText("");
            txtValorTotalFinal.setText("");
            jbIncluir.nextFocus();
            vendaDao.desconectar();
        }
    }//GEN-LAST:event_jbIncluirActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        int id = 0;
        LocalDate data = this.data;
        int idCliente = 0;
        String strData = null;

        boolean status = vendaDao.conectar();
        int resposta;
        java.sql.Date sqlDate = null;
        try {
            id = Integer.parseInt(txtId.getText());
            idCliente = Integer.parseInt(txtIdCliente.getText());
            strData = txtData.getText();
        } catch (NumberFormatException e) {

        }
        if (status == false) {
            JOptionPane.showMessageDialog(null, "Erro de conexão");
        } else {
            SimpleDateFormat conversor = new SimpleDateFormat("dd/MM/yyyy");
            try {
                Date dataConvertida = conversor.parse(strData);
                sqlDate = new java.sql.Date(dataConvertida.getTime());
            } catch (ParseException e) {
                System.out.println("Erro na conversão da data");
            }
            Cliente cliente = new Cliente();
            cliente.setId(idCliente);

            Venda venda = new Venda(id, cliente, sqlDate);
            resposta = vendaDao.salvar(venda);

            if (resposta == 1) {

            } else if (resposta == 1062) {
                JOptionPane.showMessageDialog(null, "Dados já cadastrado");
            }
            btnAdicionar.setEnabled(true);
            btnRemover.setEnabled(true);
            btnFecharVenda.setEnabled(true);
            jbSalvar.setEnabled(false);

            txtNomeCliente.setEnabled(false);
            txtNomeProduto.setEnabled(true);
            txtValorTotal.setEnabled(true);
            txtValorUnitario.setEnabled(true);
            txtValorTotalFinal.setEnabled(true);
            txtData.setEnabled(false);
            txtIdProduto.setEnabled(true);
            txtQuantidade.setEnabled(true);
            txtId.setEnabled(false);
            txtIdCliente.setEnabled(false);
            jbSalvar.nextFocus();
            vendaDao.desconectar();

        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        int id = 0;
        double soma = 0.0;
        boolean status = itemVendaDao.conectar();
        try {
            id = Integer.parseInt(txtId.getText());
        } catch (NumberFormatException e) {
            return;
        }
        if (status == true) {
            ItemVenda itemVenda = itemVendaDao.consultar(id);

            if (itemVenda == null) {
                JOptionPane.showMessageDialog(null, "Não foi encontrado uma venda com ID " + id + "");
            } else {
                txtData.setText(this.reverterData(String.valueOf(itemVenda.getVenda().getData())));
                txtIdCliente.setText(Integer.toString(itemVenda.getVenda().getCliente().getId()));
                txtNomeCliente.setText(itemVenda.getVenda().getCliente().getNomeCliente());
                jbSalvar.setEnabled(false);
                jbExcluir.setEnabled(true);

                if (itemVenda.getVenda().getStatusVenda().equals("ABERTA")) {
                    txtIdProduto.setText(Integer.toString(itemVenda.getProdutoAcabado().getId()));
                    txtNomeProduto.setText(itemVenda.getProdutoAcabado().getNome());
                    txtValorUnitario.setText(Double.toString(itemVenda.getProdutoAcabado().getPreco()));
                    txtQuantidade.setText(Double.toString(itemVenda.getQuantidade()));
                    txtValorTotal.setText(Double.toString(itemVenda.getValorTotal()));
                    txtIdProduto.setEnabled(true);
                    txtNomeProduto.setEnabled(true);
                    txtValorUnitario.setEnabled(true);
                    txtQuantidade.setEnabled(true);
                    txtIdCliente.setEditable(false);
                    txtValorTotal.setEnabled(true);
                    txtValorTotal.setEnabled(true);
                    btnAdicionar.setEnabled(true);
                    btnRemover.setEnabled(true);
                    btnFecharVenda.setEnabled(true);
                    preencherTabela();
                    txtValorTotalFinal.setText(Double.toString(itemVenda.getVenda().getValorTotalFinal()));
                    txtIdProduto.setText("");
                    txtNomeProduto.setText("");
                    txtQuantidade.setText("");
                    txtValorTotal.setText("");
                    txtValorUnitario.setText("");

                } else if (itemVenda.getVenda().getStatusVenda().equals("FECHADA")) {
                    txtIdProduto.setText(Integer.toString(itemVenda.getId()));
                    txtNomeProduto.setText(itemVenda.getProdutoAcabado().getNome());
                    txtValorUnitario.setText(Double.toString(itemVenda.getProdutoAcabado().getPreco()));
                    txtQuantidade.setText(Double.toString(itemVenda.getQuantidade()));
                    txtValorTotal.setText(Double.toString(itemVenda.getValorTotal()));
                    txtNomeProduto.setEnabled(false);
                    txtValorUnitario.setEnabled(false);
                    txtQuantidade.setEnabled(false);
                    txtValorTotal.setEnabled(false);
                    txtValorTotal.setEnabled(false);
                    btnAdicionar.setEnabled(false);
                    btnRemover.setEnabled(false);
                    btnFecharVenda.setEnabled(false);
                    txtIdCliente.setEditable(false);
                    preencherTabela();
                    txtValorTotalFinal.setText(Double.toString(itemVenda.getVenda().getValorTotalFinal()));
                    txtIdProduto.setText("");
                    txtNomeProduto.setText("");
                    txtQuantidade.setText("");
                    txtValorTotal.setText("");
                    txtValorUnitario.setText("");

                }

            }
        }
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        Object[] options = {"OK", "CANCELAR"};
        int id = 0;
        boolean status = vendaDao.conectar();
        DefaultTableModel tabelaItemVenda = (DefaultTableModel) tblItemVenda.getModel();
        try {
            id = Integer.parseInt(txtId.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Formato Inválido");
        }
        if (status == false) {
            JOptionPane.showMessageDialog(null, "Erro de conexão");
        } else {
            Venda venda = vendaDao.consultar(id);

            if (venda == null) {
                JOptionPane.showMessageDialog(rootPane, "Venda com ID: " + id + " não encontrado");
            } else {
                int confirmação = JOptionPane.showOptionDialog(null, "Deseja excluir a Movimentação: \nID:" + venda.getId() + "\nNome do Cliente: " + venda.getCliente().getNomeCliente(),
                        "Aviso", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);

                if (confirmação == 0) {
                    status = vendaDao.excluir(id);
                    JOptionPane.showMessageDialog(rootPane, "Venda: " + id + "\nNome do Cliente: " + venda.getCliente().getNomeCliente() + "\n\nRemovido com sucesso!");
                    limparTela();

                    for (int i = 0; i < tabelaItemVenda.getRowCount(); i++) {
                        tabelaItemVenda.removeRow(i);
                    }

                    vendaDao.desconectar();
                    return;
                } else if (confirmação == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Exclusão cancelada");
                    vendaDao.desconectar();
                    return;
                } else {

                }
            }
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        int id = 0;
        int idProduto = 0;
        double quantidade = 0.0;
        double valorTotal = 0.0;
        boolean statusItemVenda = itemVendaDao.conectar();
        boolean statusVenda = vendaDao.conectar();

        try {
            id = Integer.parseInt(txtId.getText());
            idProduto = Integer.parseInt(txtIdProduto.getText());
            quantidade = Double.parseDouble(txtQuantidade.getText());
            valorTotal = Double.parseDouble(txtValorTotal.getText());
        } catch (NumberFormatException e) {

        }
        if (txtNomeProduto.getText().isEmpty()) {
            return;
        }
        if (statusItemVenda == false) {
            JOptionPane.showMessageDialog(null, "Erro de conexão");
        } else {
            ProdutoAcabado acabado = new ProdutoAcabado();
            acabado.setId(idProduto);
            Venda venda = new Venda();
            venda.setId(id);
            ItemVenda itemVenda = new ItemVenda(venda, acabado, quantidade, valorTotal);

            boolean isDuplicate = false;
            for (int i = 0; i < tblItemVenda.getRowCount(); i++) {
                String strId = tblItemVenda.getValueAt(i, 0).toString();
                int idTabela = Integer.parseInt(strId);
                String strQuantidade = tblItemVenda.getValueAt(i, 2).toString();
                double quantidadeTabela = Double.parseDouble(strQuantidade);

                if (idTabela == itemVenda.getProdutoAcabado().getId() && quantidadeTabela == quantidade) {
                    isDuplicate = true;
                    break;
                }
            }
            if (isDuplicate == false) {
                itemVendaDao.salvar(itemVenda);
                preencherTabela();
                if (statusVenda == true) {
                    double valorFinal = vendaDao.consultarValorFinal(id).getValorTotalFinal();
                    txtValorTotalFinal.setText(Double.toString(valorFinal));

                    venda.setValorTotalFinal(Double.parseDouble(txtValorTotalFinal.getText()));
                    venda.setId(Integer.parseInt(txtId.getText()));
                    vendaDao.atualizar(venda);
                    vendaDao.desconectar();
                }
            }

        }
        txtIdProduto.setText("");
        txtNomeProduto.setText("");
        txtValorUnitario.setText("");
        txtQuantidade.setText("");
        txtValorTotal.setText("");
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        int id = 0;
        boolean statusItemVenda = itemVendaDao.conectar();
        boolean statusVenda = vendaDao.conectar();
        int posicao = -1;
        ItemVenda item = new ItemVenda();
        DefaultTableModel tabelaItemVenda = (DefaultTableModel) tblItemVenda.getModel();

        try {
            posicao = tblItemVenda.getSelectedRow();
            id = Integer.parseInt(txtId.getText());
        } catch (NullPointerException e) {

        }
        if (statusItemVenda == false) {
            JOptionPane.showMessageDialog(null, "Erro de conexão");
        } else {
            String nome = tblItemVenda.getValueAt(posicao, 1).toString();
            String strQuantidade = tblItemVenda.getValueAt(posicao, 2).toString();
            double quantidade = Double.parseDouble(strQuantidade);
            item = itemVendaDao.consultarItemLista(nome, quantidade, id);
            int idTabela = item.getId();
            itemVendaDao.excluir(idTabela);
            tabelaItemVenda.removeRow(tblItemVenda.getSelectedRow());

            if (statusVenda == true) {
                double valorFinal = vendaDao.consultarValorFinal(id).getValorTotalFinal();
                txtValorTotalFinal.setText(Double.toString(valorFinal));
                Venda venda = new Venda();
                venda.setValorTotalFinal(Double.parseDouble(txtValorTotalFinal.getText()));
                venda.setId(Integer.parseInt(txtId.getText()));
                vendaDao.atualizar(venda);
                vendaDao.desconectar();
            }
        }

    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnFecharVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharVendaActionPerformed
        int id = 0;
        boolean status = vendaDao.conectar();

        try {
            id = Integer.parseInt(txtId.getText());
        } catch (NumberFormatException e) {
            return;
        }

        if (status == true) {

            Venda venda = new Venda();
            venda.setId(id);
            venda.setStatusVenda("FECHADA");
            vendaDao.atualizarStatusVenda(venda);
            JOptionPane.showMessageDialog(rootPane, "Venda realizada com sucesso!!!");
            btnFecharVenda.setEnabled(false);
            txtIdProduto.setEnabled(false);
            txtNomeProduto.setEnabled(false);
            txtValorUnitario.setEnabled(false);
            txtQuantidade.setEnabled(false);
            txtValorTotal.setEnabled(false);
            txtValorTotal.setEnabled(false);
            btnAdicionar.setEnabled(false);
            btnRemover.setEnabled(false);
            double valorFinal = vendaDao.consultarValorFinal(id).getValorTotalFinal();
            txtValorTotalFinal.setText(Double.toString(valorFinal));;
            txtValorTotalFinal.setEnabled(false);

        }
    }//GEN-LAST:event_btnFecharVendaActionPerformed

    private void txtIdClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdClienteFocusLost
        int id = 0;
        boolean status = clienteDao.conectar();
        try {
            id = Integer.parseInt(txtIdCliente.getText());
        } catch (NumberFormatException e) {

        }

        if (status == true) {
            Cliente cliente = new Cliente();
            cliente = clienteDao.consultar(id);

            txtNomeCliente.setText(cliente.getNomeCliente());
            clienteDao.desconectar();
            return;
        }
        JOptionPane.showMessageDialog(rootPane, "Cliente não encontrado");
    }//GEN-LAST:event_txtIdClienteFocusLost

    private void txtIdProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdProdutoFocusLost
        int id = 0;
        boolean status = acabadoDao.conectar();
        try {
            id = Integer.parseInt(txtIdProduto.getText());
        } catch (NumberFormatException e) {

        }

        if (status == true) {
            ProdutoAcabado acabado = new ProdutoAcabado();
            acabado = acabadoDao.consultar(id);
            txtNomeProduto.setText(acabado.getNome());
            txtValorUnitario.setText(Double.toString(acabado.getPreco()));
            acabadoDao.desconectar();
            return;
        }

        JOptionPane.showMessageDialog(rootPane, "Produto não encontrado");
        txtIdProduto.setText("");
        txtNomeProduto.setText("");
        txtValorUnitario.setText("");
        txtQuantidade.setText("");
        txtValorTotal.setText("");
    }//GEN-LAST:event_txtIdProdutoFocusLost

    private void txtQuantidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantidadeFocusLost
        double quantidade = 0.0;
        double valorUnitario = 0.0;
        double soma;
        try {
            quantidade = Double.parseDouble(txtQuantidade.getText());
            valorUnitario = Double.parseDouble(txtValorUnitario.getText());
        } catch (NumberFormatException e) {

        }

        soma = valorUnitario * quantidade;
        txtValorTotal.setText(Double.toString(soma));
    }//GEN-LAST:event_txtQuantidadeFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaVenda.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaVenda.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaVenda.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaVenda.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telaVenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnFecharVenda;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbIncluir;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JLabel jlID;
    private javax.swing.JLabel jlID1;
    private javax.swing.JLabel jlID3;
    private javax.swing.JLabel jlID4;
    private javax.swing.JLabel jlProduto2;
    private javax.swing.JLabel jlProduto3;
    private javax.swing.JLabel jlQuantidade1;
    private javax.swing.JLabel jlQuantidade2;
    private javax.swing.JLabel jlQuantidade3;
    private javax.swing.JTable tblItemVenda;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIdCliente;
    private javax.swing.JTextField txtIdProduto;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtNomeProduto;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtValorTotal;
    private javax.swing.JTextField txtValorTotalFinal;
    private javax.swing.JTextField txtValorUnitario;
    // End of variables declaration//GEN-END:variables

    public String reverterData(String data) {
        String dia = data.substring(8);
        String mes = data.substring(5, 7);
        String ano = data.substring(0, 4);
        String sqlDate = dia + "/" + mes + "/" + ano;
        return sqlDate;
    }

    public void limparTela() {
        DefaultTableModel tabelaItemVenda = (DefaultTableModel) tblItemVenda.getModel();
        txtData.setText("");
        txtId.setText("");
        txtIdCliente.setText("");
        txtIdProduto.setText("");
        txtNomeCliente.setText("");
        txtNomeProduto.setText("");
        txtQuantidade.setText("");
        txtValorTotal.setText("");
        txtValorTotalFinal.setText("");
        txtValorUnitario.setText("");
        txtId.requestFocus();
        btnAdicionar.setEnabled(false);
        btnFecharVenda.setEnabled(false);
        btnRemover.setEnabled(false);
        jbExcluir.setEnabled(false);
        jbSalvar.setEnabled(false);

        for (int i = 0; i < tabelaItemVenda.getRowCount(); i++) {
            tabelaItemVenda.removeRow(i);
        }
    }
}
